module common.db {

// Annotation to indicate that an ADL struct is to be
// mapped to a database table
struct DbTable
{
  // If non empty, specifies the table name in the
  // database. Otherwise it will be derived from the
  // name of the adl struct
  String tableName = "";

  // If true, the generated db table will containing
  // a text column `id`, which will be the primary key.
  Bool withIdPrimaryKey = false;

  // If provided, use the given fields as the table's primary key
  Vector<String> withPrimaryKey = [];

  // Indexes for the table
  Vector<Vector<String>> indexes = [];

  // Uniqueness constraints over the table
  Vector<Vector<String>> uniquenessConstraints = [];
};

/// Field level annotation to override the name of the
/// database column.
type DbColumnName = String;

/// Field level annotation to override the type of the
/// database column.
type DbColumnType = String;

/// A reference for a database stored value, referenced by a
/// string primary key.
newtype DbKey<T> = String;

/// A value of type T along with a unique db identifier
struct WithDbId<T>
{
  DbKey<T> id;
  T value;
};

};
